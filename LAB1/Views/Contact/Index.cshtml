@model IEnumerable<LAB1.Models.客戶聯絡人>
@using PagedList
@using PagedList.Mvc


@{
    ViewBag.Title = "Index";
}


@section scripts
{
    <script>
        $(function () {
            $(".pagination a").on("click", function () {
                var href = $(this).attr("href");
                var pid = href.substring(href.indexOf('?page=') + 6);
                document.form1.page.value = pid;
                document.form1.submit();
                return false;
            });
        });
        function Sort(columnName, sortOrder) {
            $("#sortColumn").val(columnName);
            $("#sortOrder").val(sortOrder);
            document.form1.submit();
            return false;
        }


    </script>
}




<h2>Index</h2>
@using (Html.BeginForm("Index", "Contact", FormMethod.Get, new { name = "form1" }))
{
    @Html.AntiForgeryToken()
    @Html.Hidden("page")
    @Html.Hidden("sortOrder")
    @Html.Hidden("sortColumn")


    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <p>
        姓名:
        @Html.TextBox("keyword")
        職稱
       @Html.DropDownList("職稱_1",(IEnumerable<SelectListItem>)ViewBag.職稱列表,"全部")
        <input type="submit" value="Query" class="btn btn-default" />
        @Html.ActionLink("Download Excel", "Download")
    </p>
   
<table class="table">
    <tr>
        <th>
           
            @Html.ActionLink("職稱", "Index", null, new { onclick = string.Format("return Sort('{0}', '{1}')", "職稱", ViewBag.sort) })

        
        </th>
        <th>
            @Html.ActionLink("姓名", "Index", null, new { onclick = string.Format("return Sort('{0}', '{1}')", "姓名", ViewBag.sort) })
        </th>
        <th>
           @Html.ActionLink("Email", "Index", null, new { onclick = string.Format("return Sort('{0}', '{1}')", "Email", ViewBag.sort) })
        </th>
        <th>
        @Html.ActionLink("手機", "Index", null, new { onclick = string.Format("return Sort('{0}', '{1}')", "手機", ViewBag.sort) })

        </th>
        <th>
         @Html.ActionLink("電話", "Index", null, new { onclick = string.Format("return Sort('{0}', '{1}')", "電話", ViewBag.sort) })

        </th>
       
        <th>
           @Html.ActionLink("客戶名稱", "Index", null, new { onclick = string.Format("return Sort('{0}', '{1}')", "客戶名稱", ViewBag.sort) })

        </th>
        <th></th>
    </tr>
@{
    var data = Model.ToArray();
}
@for (var i = 0; i < data.Length; i++)
{
    @Html.HiddenFor(modelItem => data[i].Id)
    <tr>
        <td>
           
            @Html.DisplayFor(modelItem => data[i].職稱)<br />
            @Html.ValidationMessageFor(modelItem => data[i].職稱, "", new { @class = "text-danger" })
        </td>
        <td>
            @Html.DisplayFor(modelItem => data[i].姓名)
        </td>
        <td>
            @Html.DisplayFor(modelItem => data[i].Email)
        </td>
        <td>
         
            @Html.DisplayFor(modelItem => data[i].手機)<br />
            @Html.ValidationMessageFor(modelItem => data[i].手機, "", new { @class = "text-danger" })
        </td>
        <td>
           
            @Html.DisplayFor(modelItem => data[i].電話)<br />
            @Html.ValidationMessageFor(modelItem => data[i].電話, "", new { @class = "text-danger" })
        </td>
   
        <td>
            @Html.DisplayFor(modelItem => data[i].客戶資料.客戶名稱)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id = data[i].Id }) |
            @Html.ActionLink("Details", "Details", new { id = data[i].Id }) |
            @Html.ActionLink("Delete", "Delete", new { id = data[i].Id })
        </td>
    </tr>
}

</table>

    
        
  @Html.PagedListPager(Model as IPagedList, p => Url.Action("Index", new { page = p }));
    
}
